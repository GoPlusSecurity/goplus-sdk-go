// Code generated by go-swagger; DO NOT EDIT.

package website_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/GoPlusSecurity/goplus-sdk-go/pkg/gen/models"
)

// PhishingSiteUsingGETReader is a Reader for the PhishingSiteUsingGET structure.
type PhishingSiteUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PhishingSiteUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPhishingSiteUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPhishingSiteUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPhishingSiteUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPhishingSiteUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPhishingSiteUsingGETOK creates a PhishingSiteUsingGETOK with default headers values
func NewPhishingSiteUsingGETOK() *PhishingSiteUsingGETOK {
	return &PhishingSiteUsingGETOK{}
}

/*
PhishingSiteUsingGETOK handles this case with default header values.

OK
*/
type PhishingSiteUsingGETOK struct {
	Payload *models.ResponseWrapperMapStringString2a740de0Be5a4eb3B6e4A2cf0a2d8bf8
}

func (o *PhishingSiteUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/phishing_site][%d] phishingSiteUsingGETOK  %+v", 200, o.Payload)
}

func (o *PhishingSiteUsingGETOK) GetPayload() *models.ResponseWrapperMapStringString2a740de0Be5a4eb3B6e4A2cf0a2d8bf8 {
	return o.Payload
}

func (o *PhishingSiteUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperMapStringString2a740de0Be5a4eb3B6e4A2cf0a2d8bf8)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPhishingSiteUsingGETUnauthorized creates a PhishingSiteUsingGETUnauthorized with default headers values
func NewPhishingSiteUsingGETUnauthorized() *PhishingSiteUsingGETUnauthorized {
	return &PhishingSiteUsingGETUnauthorized{}
}

/*
PhishingSiteUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type PhishingSiteUsingGETUnauthorized struct {
}

func (o *PhishingSiteUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/phishing_site][%d] phishingSiteUsingGETUnauthorized ", 401)
}

func (o *PhishingSiteUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPhishingSiteUsingGETForbidden creates a PhishingSiteUsingGETForbidden with default headers values
func NewPhishingSiteUsingGETForbidden() *PhishingSiteUsingGETForbidden {
	return &PhishingSiteUsingGETForbidden{}
}

/*
PhishingSiteUsingGETForbidden handles this case with default header values.

Forbidden
*/
type PhishingSiteUsingGETForbidden struct {
}

func (o *PhishingSiteUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/phishing_site][%d] phishingSiteUsingGETForbidden ", 403)
}

func (o *PhishingSiteUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPhishingSiteUsingGETNotFound creates a PhishingSiteUsingGETNotFound with default headers values
func NewPhishingSiteUsingGETNotFound() *PhishingSiteUsingGETNotFound {
	return &PhishingSiteUsingGETNotFound{}
}

/*
PhishingSiteUsingGETNotFound handles this case with default header values.

Not Found
*/
type PhishingSiteUsingGETNotFound struct {
}

func (o *PhishingSiteUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/phishing_site][%d] phishingSiteUsingGETNotFound ", 404)
}

func (o *PhishingSiteUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
