// Code generated by go-swagger; DO NOT EDIT.

package defi_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/GoPlusSecurity/goplus-sdk-go/pkg/gen/models"
)

// GetDefiInfoUsingGETReader is a Reader for the GetDefiInfoUsingGET structure.
type GetDefiInfoUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDefiInfoUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDefiInfoUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDefiInfoUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDefiInfoUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDefiInfoUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDefiInfoUsingGETOK creates a GetDefiInfoUsingGETOK with default headers values
func NewGetDefiInfoUsingGETOK() *GetDefiInfoUsingGETOK {
	return &GetDefiInfoUsingGETOK{}
}

/*
GetDefiInfoUsingGETOK handles this case with default header values.

OK
*/
type GetDefiInfoUsingGETOK struct {
	Payload *models.GetDefiInfoResponse
}

func (o *GetDefiInfoUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/rugpull_detecting/{chain_id}][%d] getDefiInfoUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetDefiInfoUsingGETOK) GetPayload() *models.GetDefiInfoResponse {
	return o.Payload
}

func (o *GetDefiInfoUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetDefiInfoResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDefiInfoUsingGETUnauthorized creates a GetDefiInfoUsingGETUnauthorized with default headers values
func NewGetDefiInfoUsingGETUnauthorized() *GetDefiInfoUsingGETUnauthorized {
	return &GetDefiInfoUsingGETUnauthorized{}
}

/*
GetDefiInfoUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDefiInfoUsingGETUnauthorized struct {
}

func (o *GetDefiInfoUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/rugpull_detecting/{chain_id}][%d] getDefiInfoUsingGETUnauthorized ", 401)
}

func (o *GetDefiInfoUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDefiInfoUsingGETForbidden creates a GetDefiInfoUsingGETForbidden with default headers values
func NewGetDefiInfoUsingGETForbidden() *GetDefiInfoUsingGETForbidden {
	return &GetDefiInfoUsingGETForbidden{}
}

/*
GetDefiInfoUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetDefiInfoUsingGETForbidden struct {
}

func (o *GetDefiInfoUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/rugpull_detecting/{chain_id}][%d] getDefiInfoUsingGETForbidden ", 403)
}

func (o *GetDefiInfoUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDefiInfoUsingGETNotFound creates a GetDefiInfoUsingGETNotFound with default headers values
func NewGetDefiInfoUsingGETNotFound() *GetDefiInfoUsingGETNotFound {
	return &GetDefiInfoUsingGETNotFound{}
}

/*
GetDefiInfoUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetDefiInfoUsingGETNotFound struct {
}

func (o *GetDefiInfoUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/rugpull_detecting/{chain_id}][%d] getDefiInfoUsingGETNotFound ", 404)
}

func (o *GetDefiInfoUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
