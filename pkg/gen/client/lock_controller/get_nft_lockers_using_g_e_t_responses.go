// Code generated by go-swagger; DO NOT EDIT.

package lock_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/GoPlusSecurity/goplus-sdk-go/pkg/gen/models"
)

// GetNftLockersUsingGETReader is a Reader for the GetNftLockersUsingGET structure.
type GetNftLockersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNftLockersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNftLockersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetNftLockersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNftLockersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNftLockersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNftLockersUsingGETOK creates a GetNftLockersUsingGETOK with default headers values
func NewGetNftLockersUsingGETOK() *GetNftLockersUsingGETOK {
	return &GetNftLockersUsingGETOK{}
}

/*
GetNftLockersUsingGETOK handles this case with default header values.

OK
*/
type GetNftLockersUsingGETOK struct {
	Payload *models.ResponseWrapperNftLockerResponse
}

func (o *GetNftLockersUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /open/api/v1/locks/lpv3][%d] getNftLockersUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetNftLockersUsingGETOK) GetPayload() *models.ResponseWrapperNftLockerResponse {
	return o.Payload
}

func (o *GetNftLockersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseWrapperNftLockerResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNftLockersUsingGETUnauthorized creates a GetNftLockersUsingGETUnauthorized with default headers values
func NewGetNftLockersUsingGETUnauthorized() *GetNftLockersUsingGETUnauthorized {
	return &GetNftLockersUsingGETUnauthorized{}
}

/*
GetNftLockersUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetNftLockersUsingGETUnauthorized struct {
}

func (o *GetNftLockersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /open/api/v1/locks/lpv3][%d] getNftLockersUsingGETUnauthorized ", 401)
}

func (o *GetNftLockersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNftLockersUsingGETForbidden creates a GetNftLockersUsingGETForbidden with default headers values
func NewGetNftLockersUsingGETForbidden() *GetNftLockersUsingGETForbidden {
	return &GetNftLockersUsingGETForbidden{}
}

/*
GetNftLockersUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetNftLockersUsingGETForbidden struct {
}

func (o *GetNftLockersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /open/api/v1/locks/lpv3][%d] getNftLockersUsingGETForbidden ", 403)
}

func (o *GetNftLockersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNftLockersUsingGETNotFound creates a GetNftLockersUsingGETNotFound with default headers values
func NewGetNftLockersUsingGETNotFound() *GetNftLockersUsingGETNotFound {
	return &GetNftLockersUsingGETNotFound{}
}

/*
GetNftLockersUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetNftLockersUsingGETNotFound struct {
}

func (o *GetNftLockersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /open/api/v1/locks/lpv3][%d] getNftLockersUsingGETNotFound ", 404)
}

func (o *GetNftLockersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
