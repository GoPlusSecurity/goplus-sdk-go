// Code generated by go-swagger; DO NOT EDIT.

package token_security_api_for_solana_beta

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSolanaTokenSecurityUsingGETParams creates a new SolanaTokenSecurityUsingGETParams object
// with the default values initialized.
func NewSolanaTokenSecurityUsingGETParams() *SolanaTokenSecurityUsingGETParams {
	var ()
	return &SolanaTokenSecurityUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSolanaTokenSecurityUsingGETParamsWithTimeout creates a new SolanaTokenSecurityUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSolanaTokenSecurityUsingGETParamsWithTimeout(timeout time.Duration) *SolanaTokenSecurityUsingGETParams {
	var ()
	return &SolanaTokenSecurityUsingGETParams{

		timeout: timeout,
	}
}

// NewSolanaTokenSecurityUsingGETParamsWithContext creates a new SolanaTokenSecurityUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewSolanaTokenSecurityUsingGETParamsWithContext(ctx context.Context) *SolanaTokenSecurityUsingGETParams {
	var ()
	return &SolanaTokenSecurityUsingGETParams{

		Context: ctx,
	}
}

// NewSolanaTokenSecurityUsingGETParamsWithHTTPClient creates a new SolanaTokenSecurityUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSolanaTokenSecurityUsingGETParamsWithHTTPClient(client *http.Client) *SolanaTokenSecurityUsingGETParams {
	var ()
	return &SolanaTokenSecurityUsingGETParams{
		HTTPClient: client,
	}
}

/*
SolanaTokenSecurityUsingGETParams contains all the parameters to send to the API endpoint
for the solana token security using g e t operation typically these are written to a http.Request
*/
type SolanaTokenSecurityUsingGETParams struct {

	/*Authorization
	  Authorization token in the format: Bearer <token> (e.g., Bearer eyJsZXZlbCI6NSwiYXBwTmFtZSI6ImF2cyIsImFwcEtleSI6IjFaW...)

	*/
	Authorization *string
	/*ContractAddresses
	  The contract address of solana tokens.

	*/
	ContractAddresses string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the solana token security using g e t params
func (o *SolanaTokenSecurityUsingGETParams) WithTimeout(timeout time.Duration) *SolanaTokenSecurityUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the solana token security using g e t params
func (o *SolanaTokenSecurityUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the solana token security using g e t params
func (o *SolanaTokenSecurityUsingGETParams) WithContext(ctx context.Context) *SolanaTokenSecurityUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the solana token security using g e t params
func (o *SolanaTokenSecurityUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the solana token security using g e t params
func (o *SolanaTokenSecurityUsingGETParams) WithHTTPClient(client *http.Client) *SolanaTokenSecurityUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the solana token security using g e t params
func (o *SolanaTokenSecurityUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the solana token security using g e t params
func (o *SolanaTokenSecurityUsingGETParams) WithAuthorization(authorization *string) *SolanaTokenSecurityUsingGETParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the solana token security using g e t params
func (o *SolanaTokenSecurityUsingGETParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithContractAddresses adds the contractAddresses to the solana token security using g e t params
func (o *SolanaTokenSecurityUsingGETParams) WithContractAddresses(contractAddresses string) *SolanaTokenSecurityUsingGETParams {
	o.SetContractAddresses(contractAddresses)
	return o
}

// SetContractAddresses adds the contractAddresses to the solana token security using g e t params
func (o *SolanaTokenSecurityUsingGETParams) SetContractAddresses(contractAddresses string) {
	o.ContractAddresses = contractAddresses
}

// WriteToRequest writes these params to a swagger request
func (o *SolanaTokenSecurityUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param Authorization
		if err := r.SetHeaderParam("Authorization", *o.Authorization); err != nil {
			return err
		}

	}

	// query param contract_addresses
	qrContractAddresses := o.ContractAddresses
	qContractAddresses := qrContractAddresses
	if qContractAddresses != "" {
		if err := r.SetQueryParam("contract_addresses", qContractAddresses); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
